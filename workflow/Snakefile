import os
import glob
import sys
import platform
import pandas as pd
import snakemake

#from snakemake import glob_wildcards
from scripts.utility.parse_sample_list import parse_sample_list
#from snakemake.utils import min_version, validate
#from snakemake.exceptions import WorkflowError

configfile: "config/config.yml"
workdir: config["workdir"]


### Set temporary dir
if not os.getenv("TMPDIR"):
  os.environ["TMPDIR"] = "tmp"
  os.makedirs(os.environ["TMPDIR"],exist_ok=True)



### Set wildcard constraints
wildcard_constraints:
  sample_id = "[A-Za-z0-9_\-\.]+"


### Parse sample python dictionary
### It has the format samples[sample_name]  =  {'R1': 'path to R1',
#                                               'R2': 'path to R2',
#                                               'accession': 'accession id'}

samples, assemblies = parse_sample_list(config["samplelist"], config['datadir'])


### Include rules
include: "rules/preprocessing.smk"
include: "rules/assembly.smk"
include: "rules/viralcontigident.smk"

#### Set output targets based on sample names
preprocess = ["workflow/report/preprocess/preprocess_report.html"]
assembly = ["workflow/report/assembly/assemblystats.tsv"]
viralcontigident = ["results/viralcontigident/output/checkv/viruses.fna"]




### Set rule all outputs
rule preprocess:
  input: preprocess
rule assembly:
  input: assembly
rule viralcontigident:
  input: viralcontigident


